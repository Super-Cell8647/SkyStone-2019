package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.hardware.DcMotorController;
import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.util.ElapsedTime;

@Autonomous(name = "Encoder", group = "Autonomous")
public class Encoder extends LinearOpMode {
 
 
    int MOTOR_TICK_COUNTS = 1440;
    DcMotor left_front;
    DcMotor right_front;
    DcMotor left_back;
    DcMotor right_back;
 
 
    public void runOpMode() {

        telemetry.addData("Status", "Initializing...");
        telemetry.update();

        left_front = hardwareMap.get(DcMotor.class, "left_front");
        right_front = hardwareMap.get(DcMotor.class, "right_front");
        left_back = hardwareMap.get(DcMotor.class, "left_back");
        right_back = hardwareMap.get(DcMotor.class, "right_back");

        right_front.setDirection(DcMotor.Direction.REVERSE);
        right_back.setDirection(DcMotor.Direction.REVERSE);
       
     
        telemetry.addData("Status", "Done");
        telemetry.update();

     
    waitForStart();
      DriveForwardDistance(-0.5, 10);
      }

      public void DriveForwardDistance(double power, int distance) {
       
     
        //reset encoder value to 0
        left_front.setMode(DcMotor.RunMode.RESET_ENCODERS);
        right_front.setMode(DcMotor.RunMode.RESET_ENCODERS);
        left_back.setMode(DcMotor.RunMode.RESET_ENCODERS);
        right_back.setMode(DcMotor.RunMode.RESET_ENCODERS);
       
       
        //set target distance
        left_front.setTargetPosition(distance);
        right_front.setTargetPosition(distance);
        left_back.setTargetPosition(distance);
        right_back.setTargetPosition(distance);
       

        //set motor to run to position mode
        left_front.setMode(DcMotor.RunMode.RUN_TO_POSITION);
        right_front.setMode(DcMotor.RunMode.RUN_TO_POSITION);
        left_back.setMode(DcMotor.RunMode.RUN_TO_POSITION);
        right_back.setMode(DcMotor.RunMode.RUN_TO_POSITION);
       
        //set drive power
        left_front.setPower(power);
        right_front.setPower(power);
        left_back.setPower(power);
        right_back.setPower(power);
       
        //wait for motors to stop running to continue
        while (left_front.isBusy() || right_front.isBusy() || left_back.isBusy() || right_back.isBusy()) {
        }
       
        left_front.setPower(0);
        right_front.setPower(0);
        left_back.setPower(0);
        right_back.setPower(0);
       
        left_front.setMode(DcMotor.RunMode.RUN_USING_ENCODERS);
        right_front.setMode(DcMotor.RunMode.RUN_USING_ENCODERS);
        left_back.setMode(DcMotor.RunMode.RUN_USING_ENCODERS);
        right_back.setMode(DcMotor.RunMode.RUN_USING_ENCODERS);
     
     
    }}
